{"ast":null,"code":"var _jsxFileName = \"/home/prabhakar/Desktop/reactjs/section-5/four-tic_tac_toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Icon from './Components/icon';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Card, CardBody, Container, Button, Col, Row } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemArray = new Array(9).fill(\"empty\");\n\nconst App = () => {\n  _s();\n\n  const [isCross, setIsCross] = useState(false);\n  const [winMessage, setWinMessage] = useState(\"\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\", 0, 9);\n  };\n\n  const checkIsWinner = () => {\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[3] === itemArray[4] && itemArray[4] === itemArray[5] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n\n    if (itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\") {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n  };\n\n  const changeItem = itemNumber => {\n    if (winMessage) {\n      return toast(winMessage, {\n        type: \"success\"\n      });\n    }\n\n    if (itemArray[itemNumber] === \"empty\") {\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\";\n      setIsCross(!isCross);\n    } else {\n      return toast(\"already filled\", {\n        type: \"error\"\n      });\n    }\n\n    checkIsWinner();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"offset-md-3\",\n        children: [winMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-success text-uppercase text-center\",\n            children: winMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"rgbtn\",\n            color: \"success\",\n            onClick: reloadGame,\n            children: \"Reload The Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-warning\",\n          children: [isCross ? \"Cross\" : \"Circle\", \" turns\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: itemArray.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n            color: \"warning\",\n            onClick: () => changeItem(index),\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RHkIa613Pt1ZIZ1hvqmk13H7Usk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/prabhakar/Desktop/reactjs/section-5/four-tic_tac_toe/src/App.js"],"names":["React","useState","Icon","ToastContainer","toast","Card","CardBody","Container","Button","Col","Row","itemArray","Array","fill","App","isCross","setIsCross","winMessage","setWinMessage","reloadGame","checkIsWinner","changeItem","itemNumber","type","map","item","index"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Icon from './Components/icon';\n\n\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Card, CardBody , Container, Button, Col, Row} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst itemArray = new Array(9).fill(\"empty\");\n\n\nconst App = () => {\n  \n  const [isCross , setIsCross]=useState(false);\n  const [winMessage, setWinMessage] =  useState(\"\");\n\n  const reloadGame= () =>{\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\", 0 , 9)\n  }\n  const checkIsWinner =() =>{\n\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[3] === itemArray[4] && itemArray[4] === itemArray[5] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    if(itemArray[0] === itemArray[1] && itemArray[1] === itemArray[2] && itemArray[0] !== \"empty\")\n    {\n      return setWinMessage(`${itemArray[0]} wins`);\n    }\n    \n\n  }\n  \n  const changeItem = itemNumber =>{\n    if(winMessage){\n      return toast(winMessage,{type: \"success\"});\n    }\n    if(itemArray[itemNumber] === \"empty\"){\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\"\n      setIsCross(!isCross);\n    }\n    else{\n      return toast(\"already filled\", {type:\"error\"});\n    }\n\n    checkIsWinner();\n  }\n\n  return (\n\n    <Container className=\"p-5\">\n      <ToastContainer position=\"bottom-center\"/>\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n        {winMessage ? (\n          <div className=\"mb-2 mt-2\">\n                <h1 className=\"text-success text-uppercase text-center\">{winMessage}</h1>\n                <Button className=\"rgbtn\" color=\"success\" onClick={reloadGame}>Reload The Game</Button>\n          </div>\n        ) : (\n          <h1 className=\"text-center text-warning\">\n            {isCross ?  \"Cross\": \"Circle\" } turns\n          </h1>  \n        ) }\n          <div className=\"grid\">\n                {itemArray.map((item, index) => (\n                  <Card color=\"warning\" onClick={ () => changeItem(index) }>\n                      <CardBody className=\"box\">\n                          <Icon name={item} />\n                      </CardBody>\n                  </Card>\n                ))}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}